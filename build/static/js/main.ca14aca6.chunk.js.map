{"version":3,"sources":["config.js","CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddFolder/AddFolder.js","AddNote/AddNote.js","NotefulErrors.js","App/App.js","index.js"],"names":["module","exports","API_KEY","process","REACT_APP_API_KEY","API_ENDPOINT","NavCircleButton","props","tag","className","children","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","Link","to","type","react_fontawesome_index_es","icon","map","folder","key","NavLink","concat","folderId","filter","countNotesForFolder","name","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","Note","handleClickDelete","e","preventDefault","fetch","config","method","headers","content-type","then","res","ok","json","Promise","reject","console","log","catch","error","_this$props","modified","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","onDeleteNote","NotePageMain","handleDeleteNote","push","content","split","para","i","AddFolder","body","JSON","stringify","resp","data","event","newFolder","target","value","newName","updateNewFolderName","trim","_this2","Fragment","onSubmit","handleSubmit","htmlFor","touched","validateFolderName","aria-required","aria-label","onChange","updateFolderName","AddNote","addNewNote","Date","Content-Type","resJSON","handleAddNote","parseFolders","handleFormSubmit","newNote","folder_id","validateName","validateDescription","updateNewNoteData","NotefulErrors","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","App","setState","input","defineProperty","handleAddFolder","toConsumableArray","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Route","path","component","exact","Provider","NotefulErrors_NotefulErrors","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.ca14aca6.chunk.js","sourcesContent":["\n//API_ENDPOINT: 'https://notefull-api.herokuapp.com/',\n\nmodule.exports = {\n  \n  // other stuff\n  API_KEY: process.env.REACT_APP_API_KEY,\n  API_ENDPOINT: \"https://salty-hollows-50299.herokuapp.com/\"\n};","import React from 'react'\nimport './CircleButton.css'\nimport PropTypes from 'prop-types'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, children, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n\nNavCircleButton.propTypes = {\n  tag: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func\n  ]),\n  otherProps: PropTypes.object,\n  className: PropTypes.string,\n  children: PropTypes.array\n}\n","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n})\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\nimport PropTypes from 'prop-types'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folderId)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n\nNotePageNav.propTypes = {\n  history: PropTypes.object,\n  match: PropTypes.object\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\nimport PropTypes from 'prop-types'\n\nexport default class Note extends React.Component {\n\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n    \n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        // return res.json()\n      })\n      .then(() => {\n        console.log('wheeeeee')\n          this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        // this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    console.log(this.context.deleteNote);\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nNote.propTypes = {\n  onDeleteNote: PropTypes.func,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  modified: PropTypes.string\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\nimport PropTypes from 'prop-types'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderId)\n    return (\n      <section className='NoteListMain'>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n                onDeleteNote={this.onDeleteNote}\n              />\n            </li>\n          )}\n        </ul>\n      </section>\n    )\n  }\n}\n\nNoteListMain.propTypes = {\n  match: PropTypes.object\n}","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\nimport PropTypes from 'prop-types'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}\n\nNotePageMain.propTypes = {\n  history: PropTypes.object,\n  match: PropTypes.object\n}","import React, { Component } from 'react';\nimport config from '../config';\nimport ApiContext from '../ApiContext';\nimport './AddFolder.css'\nimport PropTypes from 'prop-types'\n\nexport default class AddFolder extends Component {\n  static contextType = ApiContext;\n\n  addFolder = (name) => {\n    fetch(`${config.API_ENDPOINT}/folders/`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify({name})\n      }\n    )\n    .then(resp => resp.json())\n    .then(data => this.context.addFolder(data))\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const newFolder = event.target.newFolder.value;\n    this.addFolder(newFolder);\n    this.props.history.goBack();\n  }\n\n  updateFolderName(e) {\n    const newName = e.target.value;\n      this.context.updateNewFolderName(newName);\n  }\n\n  validateFolderName() {\n    if (this.context.newFolder.name.trim() === 0) {\n      return 'Must be more than 0 characters.'\n    } else if ( this.context.newFolder.name.trim().length <= 3 ) {\n      return 'Must be more than 3 characters.'\n    }\n  }\n\n  render() {\n    return(\n      <>\n        <header>\n          <h2 className='add-folder-header'>Add A New Folder</h2>\n        </header>\n        <form className=\"add-folder-form\" onSubmit={e => this.handleSubmit(e)}>\n        <label htmlFor=\"newFolder\">\n          Name:\n        {this.context.newFolder.touched && (\n          <p>{this.validateFolderName()}</p>\n          )}  \n        </label>\n        <input\n        type=\"text\"\n        name=\"newFolder\"\n        id=\"newFolder\"\n        aria-required=\"true\"\n        aria-label=\"Name\"\n        onChange={(e) => this.updateFolderName(e)}/>\n        <button type=\"submit\">Submit</button>\n      </form>\n      </>\n    )\n  }\n}\n\nAddFolder.propTypes = {\n  history: PropTypes.object\n}","import React from 'react';\nimport config from '../config';\nimport ApiContext from '../ApiContext'\nimport './AddNote.css'\n\nexport default class AddNote extends React.Component {\n  static contextType = ApiContext\n  addNewNote = note => {\n    \n    note.modified = new Date(note.modified);\n\n    fetch(`${config.API_ENDPOINT}/notes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(note),\n    })\n      .then(res => {\n        console.log(JSON.stringify(note))\n        return res.json()\n      })\n      .then(resJSON => this.context.handleAddNote(resJSON))\n  }\n  parseFolders = () => {\n    return this.context.folders.map(folder => (\n      <option key={folder.id} name={folder.id} value={folder.id}>\n        {folder.name}\n      </option>\n    ))\n  }\n\n  handleFormSubmit = e => {\n    e.preventDefault(e)\n    const newNote = {\n      name: e.target.name.value,\n      content: e.target.content.value,\n      folder_id: e.target.folders.value,\n      modified: new Date(),\n    }\n    console.log(newNote);\n    this.addNewNote(newNote)\n    this.props.history.push('/');\n  }\n\n  validateName = () => {\n    if (this.context.newNote.name.value.length === 0) {\n      return 'Name is required'\n    }\n  }\n\n  validateDescription = () => {\n    if (this.context.newNote.content.value.length === 0) {\n      return 'Description is required'\n    }\n  }\n\n  render() {\n    console.log(this.context);\n    return (\n      <>\n        <header>\n          <h2 className=\"add-note-header\">Add A New Note</h2>\n        </header>\n        <form\n          className=\"add-note-form\"\n          onSubmit={e => this.handleFormSubmit(e)}\n        >\n          <label htmlFor=\"name\">\n            Name\n            {this.context.newNote.name.touched && <p>{this.validateName()}</p>}\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            aria-required=\"true\"\n            aria-label=\"Name\"\n            onChange={e =>\n              this.context.updateNewNoteData(e.target.name, e.target.value)\n            }\n          />\n          <label htmlFor=\"content\">\n            Description\n            {this.context.newNote.content.touched && (\n              <p>{this.validateDescription()}</p>\n            )}\n          </label>\n          <input\n            type=\"text\"\n            name=\"content\"\n            id=\"content\"\n            aria-required=\"true\"\n            aria-label=\"Description\"\n            onChange={e =>\n              this.context.updateNewNoteData(e.target.name, e.target.value)\n            }\n          />\n          <label htmlFor=\"folders\">Select a Folder</label>\n          <select\n            name=\"folders\"\n            id=\"folders\"\n            aria-required=\"true\"\n            aria-label=\"Select a folder\"\n          >\n            {this.parseFolders()}\n          </select>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class NotefulErrors extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return {hasError:true};\r\n\r\n  }\r\n  render() {\r\n    if (this.state.hasError){\r\n      return(\r\n        <div>\r\n          <h2>ERROR</h2>\r\n          <p>Something wrong here!...</p>\r\n        </div>\r\n      )\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nNotefulErrors.propTypes = {\r\n  children: PropTypes.array\r\n}","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './App.css'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport NotefulErrors from '../NotefulErrors'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n    newFolder: {\n      hasError: false,\n      touched: false,\n      name: '',\n    },\n    newNote: {\n      name: {\n        touched: false,\n        value: '',\n      },\n      folder_id: {\n        touched: false,\n        value: '',\n      },\n      content: {\n        touched: false,\n        value: '',\n      },\n    },\n  }\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/notes`),\n      fetch(`${config.API_ENDPOINT}/folders`),\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok) return notesRes.json().then(e => Promise.reject(e))\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([notesRes.json(), foldersRes.json()])\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  updateNewFolderName = name => {\n    this.setState({\n      newFolder: {\n        hasError: false,\n        touched: true,\n        name: name,\n      },\n    })\n  }\n\n  updateNewNoteData = (input, value) => {\n    this.setState({\n      newNote: {\n          ...this.state.newNote,\n        [input]: {\n          touched: true,\n          value: value,\n        },\n      },\n    })\n  }\n\n  handleAddFolder = newFolder => {\n    this.setState({\n      folders: [...this.state.folders, newFolder],\n    })\n  }\n\n  handleAddNote = note => {\n    this.setState({\n      notes: [...this.state.notes, note],\n    })\n  }\n\n  handleDeleteNote = noteId => {\n    console.log('Firing!')\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId),\n    })\n\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        <Route path=\"/note/:noteId\" component={NotePageNav} />\n        <Route path=\"/add-folder\" component={NotePageNav} />\n        <Route path=\"/add-note\" component={NotePageNav} />\n        {['/', '/folder/:folderId'].map(path => (\n          <Route exact key={path} path={path} component={NoteListNav} />\n        ))}\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        <Route path=\"/note/:noteId\" component={NotePageMain} />\n        <Route path=\"/add-folder\" component={AddFolder} />\n        <Route path=\"/add-note\" component={AddNote} />\n        {['/', '/folder/:folderId'].map(path => (\n          <Route exact key={path} path={path} component={NoteListMain} />\n        ))}\n      </>\n    )\n  }\n\n  render() {\n    console.log(this.state);\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote,\n      addFolder: this.handleAddFolder,\n      newFolder: this.state.newFolder,\n      updateNewFolderName: this.updateNewFolderName,\n      newNote: this.state.newNote,\n      handleAddNote: this.handleAddNote,\n      updateNewNoteData: this.updateNewNoteData\n    }\n    return (\n      <ApiContext.Provider value={value}>\n        <div className=\"App\">\n          <NotefulErrors>\n          <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n          <header className=\"App__header\">\n            <h1>\n              <Link to=\"/\">Noteful</Link>{' '}\n              <FontAwesomeIcon icon=\"check-double\" />\n            </h1>\n          </header>\n          <main className=\"App__main\">{this.renderMainRoutes()}</main>\n          </NotefulErrors>\n        </div>\n      </ApiContext.Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n\n);"],"sourceRoot":""}