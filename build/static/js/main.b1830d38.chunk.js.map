{"version":3,"sources":["config.js","CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddFolder/AddFolder.js","AddNote/AddNote.js","NotefulErrors.js","App/App.js","index.js"],"names":["module","exports","API_KEY","process","REACT_APP_API_KEY","API_ENDPOINT","NavCircleButton","props","tag","className","children","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","parseInt","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","Link","to","type","react_fontawesome_index_es","icon","map","folder","key","NavLink","concat","folderid","filter","countNotesForFolder","name","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","Note","handleClickDelete","e","preventDefault","fetch","config","method","headers","content-type","then","onDeleteNote","catch","error","console","_this$props","modified","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","split","para","i","AddFolder","body","JSON","stringify","resp","json","data","event","newFolder","target","value","newName","updateNewFolderName","trim","_this2","Fragment","onSubmit","handleSubmit","htmlFor","touched","validateFolderName","aria-required","aria-label","onChange","updateFolderName","AddNote","addNewNote","Date","Content-Type","res","log","resJSON","handleAddNote","parseFolders","handleFormSubmit","newNote","validateName","validateDescription","updateNewNoteData","NotefulErrors","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","App","folder_id","setState","input","defineProperty","handleAddFolder","toConsumableArray","Promise","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","ok","reject","_ref3","_ref4","Route","path","component","exact","Provider","NotefulErrors_NotefulErrors","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b1830d38.chunk.js","sourcesContent":["//API_ENDPOINT: 'https://salty-hollows-50299.herokuapp.com',\n\nmodule.exports = {\n  \n  // other stuff\n  API_KEY: process.env.REACT_APP_API_KEY,\n  //API_ENDPOINT: 'http://localhost:8080',\n  API_ENDPOINT: \"https://notefull-api.herokuapp.com\"\n};","import React from 'react'\nimport './CircleButton.css'\nimport PropTypes from 'prop-types'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, children, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n\nNavCircleButton.propTypes = {\n  tag: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func\n  ]),\n  otherProps: PropTypes.object,\n  className: PropTypes.string,\n  children: PropTypes.array\n}\n","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n})\n","\nexport const findFolder = (folders=[], folderid) =>\n  folders.find(folder => folder.id === parseInt(folderid))\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === parseInt(noteId))\n\nexport const getNotesForFolder = (notes=[], folderid) => (\n  (!folderid)\n    ? notes\n    : notes.filter(note => note.folderid === parseInt(folderid))\n)\n\nexport const countNotesForFolder = (notes=[], folderid) =>\n  notes.filter(note => note.folderid === parseInt(folderid)).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\nimport PropTypes from 'prop-types'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folderid)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n\nNotePageNav.propTypes = {\n  history: PropTypes.object,\n  match: PropTypes.object\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\nimport PropTypes from 'prop-types'\n\nexport default class Note extends React.Component {\n\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n    \n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      \n      .then(() => {\n        \n          this.props.onDeleteNote(noteId)\n          this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        // this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    \n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nNote.defaultProps={\n  onDeleteNote: ()=>{\n\n  }\n}\n\nNote.propTypes = {\n  onDeleteNote: PropTypes.func,\n  id: PropTypes.number,\n  name: PropTypes.string,\n  modified: PropTypes.string\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\nimport PropTypes from 'prop-types'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderid } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderid)\n    return (\n      <section className='NoteListMain'>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n                onDeleteNote={this.onDeleteNote}\n              />\n            </li>\n          )}\n        </ul>\n      </section>\n    )\n  }\n}\n\nNoteListMain.propTypes = {\n  match: PropTypes.object\n}","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\nimport PropTypes from 'prop-types'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}\n\nNotePageMain.propTypes = {\n  history: PropTypes.object,\n  match: PropTypes.object\n}","import React, { Component } from 'react';\nimport config from '../config';\nimport ApiContext from '../ApiContext';\nimport './AddFolder.css'\nimport PropTypes from 'prop-types'\n\nexport default class AddFolder extends Component {\n  static contextType = ApiContext;\n\n  addFolder = (name) => {\n    fetch(`${config.API_ENDPOINT}/folders`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify({name})\n      }\n    )\n    .then(resp => resp.json())\n    .then(data => this.context.addFolder(data))\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const newFolder = event.target.newFolder.value;\n    this.addFolder(newFolder);\n    this.props.history.goBack();\n  }\n\n  updateFolderName(e) {\n    const newName = e.target.value;\n      this.context.updateNewFolderName(newName);\n  }\n\n  validateFolderName() {\n    if (this.context.newFolder.name.trim() === 0) {\n      return 'Must be more than 0 characters.'\n    } else if ( this.context.newFolder.name.trim().length <= 3 ) {\n      return 'Must be more than 3 characters.'\n    }\n  }\n\n  render() {\n    return(\n      <>\n        <header>\n          <h2 className='add-folder-header'>Add A New Folder</h2>\n        </header>\n        <form className=\"add-folder-form\" onSubmit={e => this.handleSubmit(e)}>\n        <label htmlFor=\"newFolder\">\n          Name:\n        {this.context.newFolder.touched && (\n          <p>{this.validateFolderName()}</p>\n          )}  \n        </label>\n        <input\n        type=\"text\"\n        name=\"newFolder\"\n        id=\"newFolder\"\n        aria-required=\"true\"\n        aria-label=\"Name\"\n        onChange={(e) => this.updateFolderName(e)}/>\n        <button type=\"submit\">Submit</button>\n      </form>\n      </>\n    )\n  }\n}\n\nAddFolder.propTypes = {\n  history: PropTypes.object\n}","import React from 'react';\nimport config from '../config';\nimport ApiContext from '../ApiContext'\nimport './AddNote.css'\n\nexport default class AddNote extends React.Component {\n  static contextType = ApiContext\n  addNewNote = note => {\n    \n    note.modified = new Date(note.modified);\n\n    fetch(`${config.API_ENDPOINT}/notes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(note),\n    })\n      .then(res => {\n        console.log(JSON.stringify(note))\n        return res.json()\n      })\n      .then(resJSON => this.context.handleAddNote(resJSON))\n  }\n  parseFolders = () => {\n    return this.context.folders.map(folder => (\n      <option key={folder.id} name={folder.id} value={folder.id}>\n        {folder.name}\n      </option>\n    ))\n  }\n\n  handleFormSubmit = e => {\n    e.preventDefault(e)\n    const newNote = {\n      name: e.target.name.value,\n      content: e.target.content.value,\n      folderid: e.target.folders.value,\n      modified: new Date(),\n    }\n   \n    this.addNewNote(newNote)\n    this.props.history.push('/');\n  }\n\n  validateName = () => {\n    if (this.context.newNote.name.value.length === 0) {\n      return 'Name is required'\n    }\n  }\n\n  validateDescription = () => {\n    if (this.context.newNote.content.value.length === 0) {\n      return 'Description is required'\n    }\n  }\n\n  render() {\n   \n    return (\n      <>\n        <header>\n          <h2 className=\"add-note-header\">Add A New Note</h2>\n        </header>\n        <form\n          className=\"add-note-form\"\n          onSubmit={e => this.handleFormSubmit(e)}\n        >\n          <label htmlFor=\"name\">\n            Name\n            {this.context.newNote.name.touched && <p>{this.validateName()}</p>}\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            aria-required=\"true\"\n            aria-label=\"Name\"\n            onChange={e =>\n              this.context.updateNewNoteData(e.target.name, e.target.value)\n            }\n          />\n          <label htmlFor=\"content\">\n            Description\n            {this.context.newNote.content.touched && (\n              <p>{this.validateDescription()}</p>\n            )}\n          </label>\n          <input\n            type=\"text\"\n            name=\"content\"\n            id=\"content\"\n            aria-required=\"true\"\n            aria-label=\"Description\"\n            onChange={e =>\n              this.context.updateNewNoteData(e.target.name, e.target.value)\n            }\n          />\n          <label htmlFor=\"folders\">Select a Folder</label>\n          <select\n            name=\"folders\"\n            id=\"folders\"\n            aria-required=\"true\"\n            aria-label=\"Select a folder\"\n          >\n            {this.parseFolders()}\n          </select>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class NotefulErrors extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return {hasError:true};\r\n\r\n  }\r\n  render() {\r\n    if (this.state.hasError){\r\n      return(\r\n        <div>\r\n          <h2>ERROR</h2>\r\n          <p>Something wrong here!...</p>\r\n        </div>\r\n      )\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nNotefulErrors.propTypes = {\r\n  children: PropTypes.array\r\n}","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './App.css'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport NotefulErrors from '../NotefulErrors'\n\n\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n    newFolder: {\n      hasError: false,\n      touched: false,\n      name: '',\n    },\n    newNote: {\n      name: {\n        touched: false,\n        value: '',\n      },\n      folder_id: {\n        touched: false,\n        value: '',\n      },\n      content: {\n        touched: false,\n        value: '',\n      },\n    },\n  }\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/notes`),\n      fetch(`${config.API_ENDPOINT}/folders`),\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok) return notesRes.json().then(e => Promise.reject(e))\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([notesRes.json(), foldersRes.json()])\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  updateNewFolderName = name => {\n    this.setState({\n      newFolder: {\n        hasError: false,\n        touched: true,\n        name: name,\n      },\n    })\n  }\n\n  updateNewNoteData = (input, value) => {\n    this.setState({\n      newNote: {\n          ...this.state.newNote,\n        [input]: {\n          touched: true,\n          value: value,\n        },\n      },\n    })\n  }\n\n  handleAddFolder = newFolder => {\n    this.setState({\n      folders: [...this.state.folders, newFolder],\n    })\n  }\n\n  handleAddNote = note => {\n    this.setState({\n      notes: [...this.state.notes, note],\n    })\n  }\n\n  handleDeleteNote = noteId => {\n    \n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId),\n    })\n\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        <Route path=\"/note/:noteId\" component={NotePageNav} />\n        <Route path=\"/add-folder\" component={NotePageNav} />\n        <Route path=\"/add-note\" component={NotePageNav} />\n        {['/', '/folder/:folderid'].map(path => (\n          <Route exact key={path} path={path} component={NoteListNav} />\n        ))}\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        <Route path=\"/note/:noteId\" component={NotePageMain} />\n        <Route path=\"/add-folder\" component={AddFolder} />\n        <Route path=\"/add-note\" component={AddNote} />\n        {['/', '/folder/:folderid'].map(path => (\n          <Route exact key={path} path={path} component={NoteListMain} />\n        ))}\n      </>\n    )\n  }\n\n  render() {\n    \n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote,\n      addFolder: this.handleAddFolder,\n      newFolder: this.state.newFolder,\n      updateNewFolderName: this.updateNewFolderName,\n      newNote: this.state.newNote,\n      handleAddNote: this.handleAddNote,\n      updateNewNoteData: this.updateNewNoteData\n    }\n    return (\n      <ApiContext.Provider value={value}>\n        <div className=\"App\">\n          <NotefulErrors>\n          <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n          <header className=\"App__header\">\n            <h1>\n              <Link to=\"/\">Noteful</Link>{' '}\n              <FontAwesomeIcon icon=\"check-double\" />\n            </h1>\n          </header>\n          <main className=\"App__main\">{this.renderMainRoutes()}</main>\n          </NotefulErrors>\n        </div>\n      </ApiContext.Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n\n);"],"sourceRoot":""}